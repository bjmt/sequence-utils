sequenceshuffler
================

Author: Benjamin Jean-Marie Tremblay <benjmtremblay@gmail.com>
Date: 2019-04-20


Installation
------------

Enter the directory and run:

    make

The following binaries are created:

    bin/countlets
    bin/shuffler

Run these without any arguments or with the -h flag to see usage.

countlets
---------

This utility counts the total number of k-lets in the input sequence.

    bin/./countlets -k 1 -i example/sequence.txt

        A  17384
        C   8081
        G   7583
        T  16952


shuffler
--------

Shuffles an input sequence using one of three methods. The default, euler,
preserves exact k-let counts by performing a random Eulerian walk through the
sequence. The implementation is based on the concept proposed by Altschul and
Erickson (1985) as well as the cycle-popping algorithm proposed by Propp and
Wilson (1998) for finding randomised Eulerian walks.

The second method, linear, splits the sequence every k letters before shuffling
these around.

See:

    AAACAGATT

After splitting (k = 2):

    AA AC AG AT T
    1  2  3  4  r

The k-let indices are shuffled, and the shuffled sequence reassembled from
the split k-lets by their new index position. Any remainder letters which do
not fit in a full k-let are left at the end.

The third method, markov, works by first getting the total number of all
possible k-lets. Following this, a new sequence (of equal length) is created.
Every new letter is chosen based on the probability of that letter (and the
last k - 1 letters) appearing in a k-let in the original sequence. This results
in a new sequence with similar (but not exactly the same) k-let counts. The
idea for this type of shuffling was first discussed by Fitch (1983).

References
----------

Altschul, S.F. and Erickson, B.W. (1985). Significance of Nucleotide Sequence
    Alignments: A Method for Random Sequence Permutation That Preserves
    Dinucleotide and Codon Usage. _Molecular Biology and Evolution_, 2(6),
    526-538.

Fitch, W.M. (1983). Random sequences. _Journal of Molecular Biology_, 163(2),
    171-176.

Propp, J.G. and Wilson, D.W. (1998). How to Get a Perfectly Random Sample from
    a Generic Markov Chain and Generate a Random Spanning Tree of a Directed
    Graph. _Journal of Algorithms_, 27(2), 170-217.

